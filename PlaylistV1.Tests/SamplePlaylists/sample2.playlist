<Playlist Version="1.0">
    <Add
        Test="Toss.Tests.Server.Models.Account.AccountListQueryHandlerTest.AccountListQuery_returns_all_users" />
    <Add
        Test="Toss.Tests.Server.Models.Account.CurrentAccountDetailsQueryHandlerTest.Details_return_user_hashtags" />
    <Add
        Test="Toss.Tests.Server.Models.Account.CurrentAccountDetailsQueryHandlerTest.Details_when_user_has_password_return_HasPassword_to_true" />
    <Add
        Test="Toss.Tests.Server.Models.Account.CurrentAccountDetailsQueryHandlerTest.Handle_when_user_has_role_admin_return_IsAdmin_true" />
    <Add
        Test="Toss.Tests.Server.Models.Account.AddHashtagCommandHandlerTest.AddHashTag_update_user_with_new_hashtag" />
    <Add
        Test="Toss.Tests.Server.Models.Account.AddHashtagCommandHandlerTest.AddHashTag_if_null_hashtag_returns_error" />
    <Add
        Test="Toss.Tests.Server.Models.Account.CurrentAccountDetailsQueryHandlerTest.Details_when_user_has_no_password_return_HasPassword_to_false" />
    <Add
        Test="Toss.Tests.Server.Models.Account.RemoveHashtagCommandHandlerTest.RemoveHashTag_calls_user_store_with_hashtag_removed" />
    <Add
        Test="Toss.Tests.Server.Models.Account.CurrentAccountDetailsQueryHandlerTest.Details_return_account_view_model" />
    <Add
        Test="Toss.Tests.Server.Models.Account.ChangePasswordCommandHandlerTest.Handle_when_user_has_no_password_returns_error" />
    <Add
        Test="Toss.Tests.Server.Models.Account.AddHashtagCommandHandlerTest.AddHashTag_cannot_add_twice_same_hashtag" />
    <Add
        Test="Toss.Tests.Server.Models.Account.AccountListQueryHandlerTest.AccountListQuery_maps_result" />
    <Add
        Test="Toss.Tests.Server.Models.Tosses.LastTossQueryHandlerTest.last_returns_toss_matching_hashtag" />
    <Add
        Test="Toss.Tests.Server.Models.Tosses.CreateTossCommandHandlerTest.sponsored_toss_displayed_randomly_among_toss_of_one_user" />
    <Add
        Test="Toss.Tests.Server.Models.Tosses.CreateTossCommandHandlerTest.create_when_sponsored_payment_succeed_return_ok" />
    <Add
        Test="Toss.Tests.Server.Models.Tosses.LastTossQueryHandlerTest.last_returns_last_items_from_table_ordered_desc_by_createdon" />
    <Add
        Test="Toss.Tests.Server.Models.Tosses.CreateTossCommandHandlerTest.sponsored_toss_displayed_randomly_among_users" />
    <Add
        Test="Toss.Tests.Server.Models.Tosses.CreateTossCommandHandlerTest.create_setup_date_of_post_to_today" />
    <Add
        Test="Toss.Tests.Server.Models.Tosses.CreateTossCommandHandlerTest.create_when_display_count_creates_SponsoredToss" />
    <Add
        Test="Toss.Tests.Server.Models.Tosses.CreateTossCommandHandlerTest.create_setup_username_to_current_user" />
    <Add
        Test="Toss.Tests.Server.Models.Tosses.CreateTossCommandHandlerTest.create_when_payment_fails_delete_toss_throw_error" />
    <Add
        Test="Toss.Tests.Server.Models.Tosses.CreateTossCommandHandlerTest.create_insert_item_in_cosmos" />
    <Add Test="Toss.Tests.Server.Models.Tosses.DeleteTossCommandHandlerTest.Handle_removes_toss" />
    <Add
        Test="Toss.Tests.Server.Models.Tosses.CreateTossCommandHandlerTest.returns_sponsored_toss_from_sponsored_toss_query_and_dont_disply_after_count_done" />
    <Add Test="Toss.Tests.Shared.TossCreateCommandTest.invalid_if_length_over_32000" />
    <Add Test="Toss.Tests.Shared.TossCreateCommandTest.can_send_toss_with_new_line" />
    <Add Test="Toss.Tests.Shared.TossCreateCommandTest.cannot_send_toss_without_hashtag" />
    <Add Test="Toss.Tests.Shared.Tosses.TossListAdminQueryHandlerTest.Handle_return_last_items" />
    <Add Test="Toss.Tests.Shared.Tosses.TossListAdminQueryHandlerTest.Handle_map_fields" />
    <Add Test="Toss.Tests.Shared.Tosses.TossListAdminQueryHandlerTest.Handle_filter_on_max_date" />
    <Add Test="Toss.Tests.Shared.Tosses.TossListAdminQueryHandlerTest.Handle_returns_toss_count" />
</Playlist>